{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","id","nombre","apellido","data","setData","modalEditar","setModalEditar","modalEliminar","setModalEliminar","modalInsertar","setModalInsertar","personaSeleccionada","setPersonaSeleccionada","seleccionarPersona","elemento","caso","handleChange","e","target","name","value","prevState","className","onClick","map","Modal","isOpen","ModalHeader","ModalBody","readOnly","type","onChange","ModalFooter","dataNueva","persona","editar","filter","length","valorInsertar","push","insertar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6982236.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Modal, ModalBody, ModalHeader, ModalFooter} from 'reactstrap';\n\nfunction App() {\n\n  const dataPersonas = [\n    { id: 1, nombre: \"Jenaro\", apellido: \"Jimenez\" },\n    { id: 2, nombre: \"Luna\", apellido: \"Caro\" },\n    { id: 3, nombre: \"Ximena\", apellido: \"Sanchez\" },\n    { id: 4, nombre: \"Lorena\", apellido: \"Bedoya\" },\n    { id: 5, nombre: \"Johana\", apellido: \"Benitez\" },\n    \n  ];\n\n  const [data, setData] = useState(dataPersonas);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [modalEliminar, setModalEliminar] = useState(false);\n  const [modalInsertar, setModalInsertar] = useState(false);\n\n  const [personaSeleccionada, setPersonaSeleccionada] = useState({\n    id: '',\n    nombre: '',\n    apellido: ''\n  });\n\n  const seleccionarPersona=(elemento, caso)=>{\nsetPersonaSeleccionada(elemento);\n(caso==='Editar')?setModalEditar(true):setModalEliminar(true)\n  }\n\n  const handleChange=e=>{\n    const {name, value}=e.target;\n    setPersonaSeleccionada((prevState)=>({\n      ...prevState,\n      [name]: value\n    }));\n  }\n\n  const editar=()=>{\n    var dataNueva=data;\n    dataNueva.map((persona)=>{\n      if(persona.id===personaSeleccionada.id){\n        persona.apellido=personaSeleccionada.apellido;\n        persona.nombre=personaSeleccionada.nombre;\n      }\n      return persona\n    });\n    setData(dataNueva);\n    setModalEditar(false);\n  }\n\n  const eliminar =()=>{\n    setData(data.filter(persona=>persona.id!==personaSeleccionada.id));\n    setModalEliminar(false);\n  }\n\n  const abrirModalInsertar=()=>{\n    setPersonaSeleccionada(null);\n    setModalInsertar(true);\n  }\n\n  const insertar =()=>{\n    var valorInsertar=personaSeleccionada;\n    valorInsertar.id=data[data.length-1].id+1;\n    var dataNueva = data;\n    dataNueva.push(valorInsertar);\n    setData(dataNueva);\n    setModalInsertar(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h2>Lista de Usuarios</h2>\n      </header>\n      <br />\n      <button className=\"btn btn-success\" onClick={()=>abrirModalInsertar()}>Insertar</button>\n      <br /><br />\n      <div id=\"main-container\">\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Nombre</th>\n              <th>Apellido</th>\n              <th>Acciones</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map(elemento=>(\n              <tr>\n                <td>{elemento.id}</td>\n                <td>{elemento.nombre}</td>\n                <td>{elemento.apellido}</td>\n                <td><button className=\"btn btn-warning\" onClick={()=>seleccionarPersona(elemento, 'Editar')}>Editar</button> {\"   \"}\n                <button className=\"btn btn-danger\" onClick={()=>seleccionarPersona(elemento, 'Eliminar')}>Eliminar</button></td>\n              </tr>\n            ))\n            }\n          </tbody>\n        </table>\n      </div>\n\n      <Modal isOpen={modalEditar}>\n        <ModalHeader>\n          <div>\n            <h3>Editar Usuarios</h3>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"form-group\">\n            <label>ID</label>\n            <input\n              className=\"form-control\"\n              readOnly\n              type=\"text\"\n              name=\"id\"\n              value={personaSeleccionada && personaSeleccionada.id}\n            />\n            <br />\n\n            <label>Usuario</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"nombre\"\n              value={personaSeleccionada && personaSeleccionada.nombre}\n              onChange={handleChange}\n            />\n            <br />\n\n            <label>Apellido</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"apellido\"\n              value={personaSeleccionada && personaSeleccionada.apellido}\n              onChange={handleChange}\n            />\n            <br />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-warning\" onClick={()=>editar()}>\n            Actualizar\n          </button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={()=>setModalEditar(false)}\n          >\n            Cancelar\n          </button>\n        </ModalFooter>\n      </Modal>\n\n\n      <Modal isOpen={modalEliminar}>\n        <ModalBody>\n          Estás Seguro que Deseas Eliminar a este usuario {personaSeleccionada && personaSeleccionada.nombre}\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-danger\" onClick={()=>eliminar()}>\n            Sí\n          </button>\n          <button\n            className=\"btn btn-secondary\"\n            onClick={()=>setModalEliminar(false)}\n          >\n            No\n          </button>\n        </ModalFooter>\n      </Modal>\n\n\n        <Modal isOpen={modalInsertar}>\n        <ModalHeader>\n          <div>\n            <h3>Insertar Usuario</h3>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"form-group\">\n            <label>ID</label>\n            <input\n              className=\"form-control\"\n              readOnly\n              type=\"text\"\n              name=\"id\"\n              value={data[data.length-1].id+1}\n            />\n            <br />\n\n            <label>Usuario</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"nombre\"\n              value={personaSeleccionada ? personaSeleccionada.nombre: ''}\n              onChange={handleChange}\n            />\n            <br />\n\n            <label>Apellido</label>\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"apellido\"\n              value={personaSeleccionada ? personaSeleccionada.apellido: ''}\n              onChange={handleChange}\n            />\n            <br />\n          </div>\n        </ModalBody>\n        <ModalFooter>\n          <button className=\"btn btn-warning\"\n          onClick={()=>insertar()}>\n            Insertar\n          </button>\n          <button\n            className=\"btn btn-danger\"\n            onClick={()=>setModalInsertar(false)}\n          >\n            Cancelar\n          </button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}